import { Sidebar } from '.'

export const HooksSidebar = () => {
  const DocsSidebarGroup = [
    {
      title: 'State',
      items: [
        { text: '[TBD] createGlobalState', href: '/hooks/state' },
        { text: '[TBD] createInjectionState', href: '/hooks/elements' },
        { text: '[TBD] createSharedComposable', href: '/hooks/browser' },
        { text: '[TBD] injectLocal', href: '/hooks/sensors' },
        { text: '[TBD] provideLocal', href: '/hooks/network' },
        { text: '[TBD] useAsyncState', href: '/hooks/animation' },
        {
          text: '[TBD] useDebouncedRefHistory',
          href: '/hooks/component',
        },
        { text: '[TBD] useLastChanged', href: '/hooks/watch' },
        { text: '[TBD] useLocalStorage', href: '/hooks/array' },
        { text: '[TBD] useManualRefHistory', href: '/hooks/time' },
        { text: '[TBD] useRefHistory', href: '/hooks/utilities' },
        { text: '[TBD] useSessionStorage', href: '/hooks/time' },
        { text: '[TBD] useStorage', href: '/hooks/utilities' },
        { text: '[TBD] useStorageAsync', href: '/hooks/time' },
        {
          text: '[TBD] useThrottledRefHistory',
          href: '/hooks/utilities',
        },
      ],
    },
    {
      title: 'Elements',
      items: [
        { text: '[TBD] useActiveElement', href: '/hooks/state' },
        { text: '[TBD] useDocumentVisibility', href: '/hooks/elements' },
        { text: '[TBD] useDraggable', href: '/hooks/browser' },
        { text: '[TBD] useDropZone', href: '/hooks/sensors' },
        { text: '[TBD] useElementBounding', href: '/hooks/network' },
        { text: '[TBD] useElementSize', href: '/hooks/animation' },
        { text: '[TBD] useElementVisibility', href: '/hooks/component' },
        { text: '[TBD] useIntersectionObserver', href: '/hooks/watch' },
        { text: '[TBD] useMouseInElement', href: '/hooks/array' },
        { text: '[TBD] useParentElement', href: '/hooks/time' },
        { text: '[TBD] useResizeObserver', href: '/hooks/utilities' },
        { text: 'useWindowFocus', href: '/hooks/elements/useWindowFocus' },
        { text: '[TBD] useWindowScroll', href: '/hooks/time' },
        { text: '[TBD] useWindowSize', href: '/hooks/utilities' },
      ],
    },
    {
      title: 'Core Hooks',
      items: [
        { text: 'State', href: '/hooks/state' },
        { text: 'Elements', href: '/hooks/elements' },
        { text: 'Browser', href: '/hooks/browser' },
        { text: 'Sensors', href: '/hooks/sensors' },
        { text: 'Network', href: '/hooks/network' },
        { text: 'Animation', href: '/hooks/animation' },
        { text: 'Component', href: '/hooks/component' },
        { text: 'Watch', href: '/hooks/watch' },
        { text: 'Array', href: '/hooks/array' },
        { text: 'Time', href: '/hooks/time' },
        { text: 'Utilities', href: '/hooks/utilities' },
      ],
    },
    {
      title: 'Core Hooks',
      items: [
        { text: 'State', href: '/hooks/state' },
        { text: 'Elements', href: '/hooks/elements' },
        { text: 'Browser', href: '/hooks/browser' },
        { text: 'Sensors', href: '/hooks/sensors' },
        { text: 'Network', href: '/hooks/network' },
        { text: 'Animation', href: '/hooks/animation' },
        { text: 'Component', href: '/hooks/component' },
        { text: 'Watch', href: '/hooks/watch' },
        { text: 'Array', href: '/hooks/array' },
        { text: 'Time', href: '/hooks/time' },
        { text: 'Utilities', href: '/hooks/utilities' },
      ],
    },
    {
      title: 'Core Hooks',
      items: [
        { text: 'State', href: '/hooks/state' },
        { text: 'Elements', href: '/hooks/elements' },
        { text: 'Browser', href: '/hooks/browser' },
        { text: 'Sensors', href: '/hooks/sensors' },
        { text: 'Network', href: '/hooks/network' },
        { text: 'Animation', href: '/hooks/animation' },
        { text: 'Component', href: '/hooks/component' },
        { text: 'Watch', href: '/hooks/watch' },
        { text: 'Array', href: '/hooks/array' },
        { text: 'Time', href: '/hooks/time' },
        { text: 'Utilities', href: '/hooks/utilities' },
      ],
    },
    {
      title: 'Core Hooks',
      items: [
        { text: 'State', href: '/hooks/state' },
        { text: 'Elements', href: '/hooks/elements' },
        { text: 'Browser', href: '/hooks/browser' },
        { text: 'Sensors', href: '/hooks/sensors' },
        { text: 'Network', href: '/hooks/network' },
        { text: 'Animation', href: '/hooks/animation' },
        { text: 'Component', href: '/hooks/component' },
        { text: 'Watch', href: '/hooks/watch' },
        { text: 'Array', href: '/hooks/array' },
        { text: 'Time', href: '/hooks/time' },
        { text: 'Utilities', href: '/hooks/utilities' },
      ],
    },
    {
      title: 'Core Hooks',
      items: [
        { text: 'State', href: '/hooks/state' },
        { text: 'Elements', href: '/hooks/elements' },
        { text: 'Browser', href: '/hooks/browser' },
        { text: 'Sensors', href: '/hooks/sensors' },
        { text: 'Network', href: '/hooks/network' },
        { text: 'Animation', href: '/hooks/animation' },
        { text: 'Component', href: '/hooks/component' },
        { text: 'Watch', href: '/hooks/watch' },
        { text: 'Array', href: '/hooks/array' },
        { text: 'Time', href: '/hooks/time' },
        { text: 'Utilities', href: '/hooks/utilities' },
      ],
    },
    {
      title: 'Core Hooks',
      items: [
        { text: 'State', href: '/hooks/state' },
        { text: 'Elements', href: '/hooks/elements' },
        { text: 'Browser', href: '/hooks/browser' },
        { text: 'Sensors', href: '/hooks/sensors' },
        { text: 'Network', href: '/hooks/network' },
        { text: 'Animation', href: '/hooks/animation' },
        { text: 'Component', href: '/hooks/component' },
        { text: 'Watch', href: '/hooks/watch' },
        { text: 'Array', href: '/hooks/array' },
        { text: 'Time', href: '/hooks/time' },
        { text: 'Utilities', href: '/hooks/utilities' },
      ],
    },
    {
      title: 'Core Hooks',
      items: [
        { text: 'State', href: '/hooks/state' },
        { text: 'Elements', href: '/hooks/elements' },
        { text: 'Browser', href: '/hooks/browser' },
        { text: 'Sensors', href: '/hooks/sensors' },
        { text: 'Network', href: '/hooks/network' },
        { text: 'Animation', href: '/hooks/animation' },
        { text: 'Component', href: '/hooks/component' },
        { text: 'Watch', href: '/hooks/watch' },
        { text: 'Array', href: '/hooks/array' },
        { text: 'Time', href: '/hooks/time' },
        { text: 'Utilities', href: '/hooks/utilities' },
      ],
    },
  ]
  return (
    <>
      <Sidebar groups={DocsSidebarGroup} />
    </>
  )
}
